{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tunah\\\\Desktop\\\\MERN_AUTH\\\\client\\\\src\\\\components\\\\Navbar\\\\Navbar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport memories from '../../images/memories.png';\nimport * as actionType from '../../constants/actionTypes';\nimport useStyles from './styles';\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    history.push('/');\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n  return /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    position: \"static\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.brandContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: Link,\n    to: \"/\",\n    className: classes.heading,\n    variant: \"h2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Memories\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.image,\n    src: memories,\n    alt: \"icon\",\n    height: \"60\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, user ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.purple,\n    alt: user.result.name,\n    src: user.result.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, user.result.name.charAt(0)), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.userName,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, user.result.name), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.logout,\n    color: \"secondary\",\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    to: \"/auth\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Sign In\")));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["C:/Users/tunah/Desktop/MERN_AUTH/client/src/components/Navbar/Navbar.js"],"names":["React","useState","useEffect","AppBar","Typography","Toolbar","Avatar","Button","Link","useHistory","useLocation","useDispatch","decode","memories","actionType","useStyles","Navbar","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","classes","logout","type","push","token","decodedToken","exp","Date","getTime","appBar","brandContainer","heading","image","toolbar","profile","purple","result","name","imageUrl","charAt","userName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\nimport memories from '../../images/memories.png';\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = () => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n\r\n    const logout = () => {\r\n      dispatch({type: 'LOGOUT'});\r\n      history.push('/')\r\n      setUser(null);\r\n    };\r\n    useEffect(() => {\r\n      const token = user?.token;\r\n\r\n      if (token) {\r\n        const decodedToken = decode(token);\r\n\r\n        if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n      }\r\n\r\n      setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n    return (\r\n        <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n        <div className={classes.brandContainer}>\r\n        <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\r\n        <img className={classes.image} src={memories} alt=\"icon\" height=\"60\" /> \r\n        </div>\r\n      <Toolbar className={classes.toolbar}>\r\n        {user ? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>{user.result.name.charAt(0)}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user.result.name}</Typography>          \r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}></Button>\r\n          </div>\r\n        ) : (\r\n            <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n        )}\r\n      </Toolbar>\r\n      </AppBar>\r\n    );\r\n};\r\n\r\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}