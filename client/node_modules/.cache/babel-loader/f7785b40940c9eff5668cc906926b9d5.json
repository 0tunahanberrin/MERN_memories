{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tunah\\\\Desktop\\\\MERN_AUTH\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [formData, setFormData] = useState();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignUp) {\n      dispatch(signup(formData, history));\n    } else {\n      dispatch(signin(formData, history));\n    } //console.log(formData);\n\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const switchMode = () => {\n    setIsSignUp(prevIsSignup => !prevIsSignup);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId; //console.log(res);\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log('Google Sign In was unsuccessful. Try Again Later');\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, isSignUp ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, isSignUp && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstname\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastname\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), isSignUp && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, isSignUp ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"486765683974-oageihfta7u9dmsmo0ov34gi3kr4rmfs.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 32\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host-origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, isSignUp ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, isSignUp ? 'Already have an account? Sign In' : \"Don't have a account? Sign Up\"))))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/tunah/Desktop/MERN_AUTH/client/src/components/Auth/Auth.js"],"names":["React","useState","useDispatch","Avatar","Button","Paper","Grid","Typography","Container","useHistory","GoogleLogin","LockOutlinedIcon","Icon","signin","signup","AUTH","useStyles","Input","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","isSignUp","setIsSignUp","formData","setFormData","dispatch","history","handleShowPassword","prevShowPassword","handleSubmit","e","preventDefault","handleChange","target","name","value","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport Icon from './icon';\r\nimport { signin, signup } from '../../actions/auth';\r\nimport { AUTH } from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\n\r\nconst initialState = {firstName: '', lastName: '', email: '', password: '', confirmPassword: ''};\r\n\r\nconst Auth = () => {\r\n    const classes = useStyles();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const [formData, setFormData] = useState();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if(isSignUp) {\r\n        dispatch(signup(formData, history))\r\n      }else {\r\n        dispatch(signin(formData, history))\r\n      }\r\n\r\n      //console.log(formData);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n      setFormData({... formData, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const switchMode = () =>{\r\n      setIsSignUp((prevIsSignup) => !prevIsSignup);\r\n      handleShowPassword(false);\r\n    };\r\n\r\n    const googleSuccess = async (res) => {\r\n      const result = res?.profileObj;\r\n      const token = res?.tokenId;\r\n      //console.log(res);\r\n      try {\r\n        dispatch({type: 'AUTH', data: {result, token} });\r\n        history.push('/')\r\n      } catch (error) {\r\n        \r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    const googleFailure = (error) => {\r\n      console.log(error);\r\n      console.log('Google Sign In was unsuccessful. Try Again Later');\r\n    };\r\n\r\n    return(\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography variant=\"h5\">{isSignUp ? 'Sign Up':'Sign In'}</Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              {\r\n                isSignUp && (\r\n                  <>\r\n                  \r\n                    <Input name=\"firstname\" label=\"First Name\" handleChange={handleChange} autoFocus half/>\r\n                    <Input name=\"lastname\" label=\"Last Name\" handleChange={handleChange} half/> \r\n                  \r\n                  </>\r\n                )}\r\n              <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type= \"email\"/>\r\n              <Input name=\"password\" label=\"Password\" handleChange={handleChange} type= {showPassword ? \"text\" : \"password\"} handleShowPassword = {handleShowPassword}/>\r\n               { isSignUp && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\"/>}\r\n            </Grid>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n              {isSignUp ? 'Sign Up': 'Sign In'}\r\n            </Button>\r\n            <GoogleLogin\r\n                clientId=\"486765683974-oageihfta7u9dmsmo0ov34gi3kr4rmfs.apps.googleusercontent.com\"\r\n                render={(renderProps) => (\r\n                    <Button className={classes.googleButton} \r\n                    color='primary' \r\n                    fullWidth onClick={renderProps.onClick} \r\n                    disabled={renderProps.disabled} \r\n                    startIcon={<Icon />} \r\n                    variant=\"contained\">\r\n                      Google Sign In\r\n                    </Button>\r\n                )}\r\n                onSuccess={googleSuccess}\r\n                onFailure={googleFailure}\r\n                cookiePolicy=\"single_host-origin\"\r\n            />\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n              {isSignUp ? 'Sign Up': 'Sign In'}\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <Button onClick={switchMode}>\r\n                      { isSignUp ? 'Already have an account? Sign In' : \"Don't have a account? Sign Up\"}\r\n                    </Button>\r\n                  </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </Container>      \r\n    );\r\n};\r\n\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}